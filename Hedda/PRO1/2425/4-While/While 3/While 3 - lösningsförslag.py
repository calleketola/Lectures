##############
## √ñVNING 1 ##
##############

"""
En sj√∂ har en area p√• 1000 m2. I ett h√∂rn av sj√∂n ligger alger med en
utbredning p√• 13 m2. Varje vecka v√§xer algerna och t√§cker 27 m^2 mer av sj√∂n.
Efter hur m√•nga veckor √§r sj√∂n t√§ckt med alger?
"""

sj√∂area = 1000
algarea = 13

veckor = 0

while algarea < sj√∂area:
    algarea += 27
    veckor += 1

print("Det tar", veckor, "veckor att t√§cka sj√∂n med alger")

##############
## √ñVNING 2 ##
##############

"""
Grannsj√∂n, som √§r 1337 m^2 stor, √§r redan t√§ckt med alger. D√§rf√∂r har man
h√§llt i Algd√∂darmedel X i sj√∂n. Varje vecka minskar ytan algerna t√§cker med 3
%. Efter hur m√•nga veckor har h√§lften av algerna f√∂rsvunnit?
"""

sj√∂area = 1337
algarea = sj√∂area

veckor = 0

f√∂r√§ndring = 0.97

while algarea > sj√∂area/2:
    algarea *= f√∂r√§ndring
    veckor += 1
print("Det tar", veckor, "veckor att halvera algerna")

##############
## √ñVNING 3 ##
##############

"""
Skriv ett program som tar emot ett tal n och r√§knar ut f√∂ljande summa:
1 + 4 + 9 + 16 + ... + n^2
"""

n = input("Hur m√•nga termer? ")
n = int(n)
i = 1
summa = 0
while i < n:
    summa += i**2
    i += 1
print(summa)

##############
## √ñVNING 4 ##
##############

"""
R√§kna nu ut f√∂ljande summa ist√§llet:
1/1 + 1/2 + 1/4 + 1/8 + ... +  1/2^n
"""

summa = 0
i = 0
while i < n:
    summa += 1/2**i
    i += 1
print(summa)



##############
## √ñVNING 5 ##
##############

"""
I rollspelet Dungeons and Dragons rullar man en 20-sidig t√§rning f√∂r att se om
man lyckas med n√•got. Ut√∂ver vad t√§rningen visar tar man plus sin bonus
(som kan vara negativ) och l√§gger till det p√• t√§rningsresultatet. Skriv ett
program som rullar en 20-sidig t√§rning och fr√•gar efter din bonus (oftast ett
tal mellan -2 och +20) och sen fr√•gar efter sv√•righeten att lyckas. Om
t√§rningen plus bonusen blir h√∂gre eller lika med sv√•righeten har man lyckats.
"""

import random

# On√∂digt komplicerad one line:er
print((random.randint(1,20) + int(input("Bonus: "))) >= int(input("Sv√•righet: ")))

# L√§ngre enklare s√§tt
die = random.randint(1,20)
bonus = int(input("Bonus: "))
diff = int(input("Difficulty: "))

if die + bonus >= diff:
    print("Success!")
else:
    print("Failure!")

##############
## √ñVNING 6 ##
##############

"""
I rollspelet Eon s√• kastade man ist√§llet era sexsidiga t√§rningar och r√§knade
ihop resultatet, men den regeln att om man slog en sexa s√• slog man om den
t√§rningen och kastade en till. Testa att kasta skitm√•nga t√§rningar. Vad blir
medelv√§rdet f√∂r en t√§rning? (R√§kna med att totalen √§r lika med antalet
t√§rningar du kastade fr√•n b√∂rjan).
"""

summa = 0
start_antal = 1000000
antal = start_antal
kastade = 0
while kastade < antal:
    kastade += 1
    t√§rning = random.randint(1,6)
    if t√§rning == 6:
        antal += 2
        continue
    summa += t√§rning
print(summa/start_antal)

##############
## √ñVNING 7 ##
##############

"""
I rollspelen Sv√§rdets s√•ng, Mutant √•r noll m.fl. s√• rullar man precis som i Eon
flera sexsidiga t√§rningar (oftast mellan 2 och 15 stycken) f√∂r att se om man
lyckas. Tillskillnad fr√•n Eon s√• r√§knar man bara antalet sexor. Skriv ett
program som rullar n t√§rningar och skriver ut hur m√•nga sexor man f√•r.
"""

n = input("Antal t√§rningar: ")
n = int(n)

sexor = 0
i = 0
while i < n:
    resultat = random.randint(1,6)
    if resultat == 6:
        sexor += 1
    i += 1
print("Du rullade totalt", sexor, "sexor")

##############
## √ñVNING 8 ##
##############

"""
Skriv ett program som tar a delat med b och f√∂rs√∂ker hitta en approximation
p√• œÄ genom att uppdatera a och b s√• att du kommer n√§rmare och n√§rmare œÄ.
Skriv sen ut dierensen mellan œÄ och ditt br√•k.
"""

import math

a = 1
b = 1

E = 2**(-10)

while abs(a/b-math.pi) > E:
    if a/b - math.pi > 0:
        b += 1
    else:
        a += 1
    print(a/b)
print(a,b,a/b)

##############
## √ñVNING 9 ##
##############

"""
I Dungeons and Dragons s√• f√•r man ibland rulla tv√• 20-sidiga t√§rningar och
v√§lja den t√§rning som slog h√∂gst. Rulla tv√• 20-sidiga t√§rningar
1 000 000 g√•nger. Vad √§r medelv√§rdet f√∂r den b√§sta t√§rningen i varje kast?
"""

n = 1000000
rullade = 0
summa = 0
while rullade < n:
    t1 = random.randint(1,20)
    t2 = random.randint(1,20)
    if t1 > t2:
        summa += t1
    else:
        summa += t2
    rullade += 1
medel = summa/n
print("Medelv√§rdet √§r: ", medel)

###############
## √ñVNING 10 ##
###############

"""
G√∂r samma experiment igen men v√§lj den s√§mre t√§rningen.
"""
n = 1000000
rullade = 0
summa = 0
while rullade < n:
    t1 = random.randint(1,20)
    t2 = random.randint(1,20)
    if t1 < t2:
        summa += t1
    else:
        summa += t2
    rullade += 1
medel = summa/n
print("Medelv√§rdet √§r: ", medel)
